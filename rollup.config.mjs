import assert from 'node:assert';
import { fileURLToPath } from 'node:url';
import { relative } from 'node:path';
import { rmSync } from 'node:fs';

import fg from 'fast-glob';

const inputFiles = fg.globSync([
	'lib/**/*.mjs',
	'!**/__tests__/**',
	'!lib/testUtils/**',

	// NOTE: We cannot support CommonJS for `cli.mjs` since the `meow` dependency is pure ESM.
	'!lib/cli.mjs',
]);

// clean up
for (const input of inputFiles) {
	rmSync(input.replace('.mjs', '.cjs'), { force: true });
}

const rootDir = fileURLToPath(new URL('.', import.meta.url));

/** @type {import('rollup').RollupOptions[]} */
export default inputFiles.map((input) => {
	return {
		input,
		output: {
			format: 'cjs',
			dir: rootDir,
			entryFileNames: ({ facadeModuleId }) => {
				assert.ok(facadeModuleId);

				return relative(rootDir, facadeModuleId).replace('.mjs', '.cjs');
			},
			generatedCode: {
				preset: 'es2015',
				symbols: false,
			},
			interop: 'default',
			esModule: false,
			preserveModules: true,
			validate: true,
			banner:
				'// NOTICE: This file is generated by Rollup. To modify it,\n// please instead edit the ESM counterpart and rebuild with Rollup (npm run build).',
			plugins: [addWarningForCommonJS()],
		},
		treeshake: false,
	};
});

/**
 * @see https://rollupjs.org/plugin-development/
 * @returns {import('rollup').OutputPlugin}
 */
function addWarningForCommonJS() {
	return {
		name: 'stylelint-add-warning-for-cjs',
		generateBundle(_options, bundle) {
			const asset = bundle['lib/createStylelint.cjs'];

			if (asset?.type === 'chunk') {
				asset.code = asset.code.replace(
					'	// [INSERT HERE] CommonJS deprecation code',
					`
	if (!options.quietDeprecationWarnings) {
		console.warn('The CommonJS Node.js API is deprecated. See https://stylelint.io/migration-guide/to-16');
	}
`,
				);
			}
		},
	};
}
